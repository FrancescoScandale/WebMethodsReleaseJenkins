# 
 #  Copyright 2021 Software AG
 #  Licensed under the Apache License, Version 2.0 (the "License");
 #  you may not use this file except in compliance with the License.
# 
openapi: 3.0.1
info:
  title: CloudStreams Provider APIs
  description: |
    CloudStreams server APIs for fetching the connector model and CloudStreams server details.
  contact:
    url: https://empower.softwareag.com/ContactSupport/default.aspx
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
externalDocs:
  description: For more information about CloudStreams visit
  url: https://empower.softwareag.com/default.aspx
servers:
- url: http://localhost:5555/rad/wm.c10s.api:metadata
security:
- basicAuth: []
tags:
- name: metadata
  description: Getter APIs for querying the connector and CloudStreams server metadata.
paths:
  /metadata/connectors:
    get:
      tags:
      - metadata
      summary: List all connectors
      description: List all connectors installed in the server.
      operationId: listAllConnectors
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorInfo'
        "400":
          description: The requested data could be not fetched from the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/connections:
    get:
      tags:
      - metadata
      summary: List all supported connection types for the given connector.
      operationId: getAllConnectionTypes
      parameters:
      - name: connectorId
        in: path
        description: ID of the connector.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionTypeModel'
        "400":
          description: The specified connector ID is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/connections/{connectionType}:
    get:
      tags:
      - metadata
      summary: Fetch connector metadata for the specified connection type.
      description: Retrieve connection metadata for the specified connection type.
      operationId: getConnectionMetadata
      parameters:
      - name: connectorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionType
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMetadataResponse'
        "400":
          description: The specified connector ID is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains:
    get:
      tags:
      - metadata
      summary: List all domains from the given connector.
      operationId: listDomains
      parameters:
      - name: connectorId
        in: path
        description: Connector ID to fetch domains.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainsModel'
        "400":
          description: The specified connector ID is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions:
    get:
      tags:
      - metadata
      summary: List the basic details of Interactions
      description: "Returns the basic information of Interactions. Details like\
        \ name, displayName, properties will be returned."
      operationId: getInteractionsDetails
      parameters:
      - name: connectorId
        in: path
        description: Connector ID to fetch interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: ID of the domain for which we want to fetch interactions
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectorType
        in: query
        description: SOAP or REST should be the connectorType
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: connectionType
        in: query
        description: Interaction list and other properties vary based on connectionType
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InteractionModel'
        "400":
          description: The specified connector ID or domain ID is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-rest/{interactionId}/headers:
    get:
      tags:
      - metadata
      summary: Get all headers from the interaction
      description: Returns all headers from the interaction.
      operationId: getInteractionHeaders
      parameters:
      - name: connectorId
        in: path
        description: Connector ID is required to fetch any child information like
          interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: ID of the interaction for fetching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: context
        in: query
        description: IN or OUT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: connectionType
        in: query
        description: Headers list will vary based connectionType.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeaderModel'
        "400":
          description: The specified connector ID or domain ID or interaction ID is
            invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-rest/{interactionId}/parameters:
    get:
      tags:
      - metadata
      summary: Fetch interaction parameters
      description: Fetches all the parameters associated with the interaction.
      operationId: getInteractionParameters
      parameters:
      - name: connectorId
        in: path
        description: Connector ID is required to fetch any child information like
          interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: ID of the interaction for fetching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParameterModel'
        "400":
          description: The specified connector ID or domain ID or interaction ID is
            invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-rest/{interactionId}/body:
    get:
      tags:
      - metadata
      summary: Get the request/response body for given interaction.
      description: This API returns the request/response body for given interaction..
      operationId: getInteractionBody
      parameters:
      - name: connectorId
        in: path
        description: Connector ID is required to fetch any child information like
          interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: Id of interaction for fetching request/response body.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: request or response body
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTInteractionBody'
        "400":
          description: The specified connector ID or domain ID or interaction ID is
            invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-soap:
    get:
      tags:
      - metadata
      summary: list all SOAP interactions
      description: API to get type
      operationId: getSOAPInteractions
      parameters:
      - name: connectorId
        in: path
        description: Connector ID is required to fetch any child information like
          interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SOAPInteractionModel'
        "400":
          description: The specified connector ID or domain ID is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-soap/{interactionId}/headers:
    get:
      tags:
      - metadata
      summary: Fetch all the headers of a SOAP interaction.
      description: This API returns all the headers associated with interaction.
      operationId: getSOAPInteractionHeaders
      parameters:
      - name: connectorId
        in: path
        description: Connector ID required to get the any child information like interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: Id of interaction for fetching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: context
        in: query
        description: IN or OUT
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeaderModel'
        "400":
          description: The specified connector ID or domain ID or interaction ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-soap/{interactionId}/parameters:
    get:
      tags:
      - metadata
      summary: Fetch the parameters for the given SOAP interactions.
      description: This API returns the parameters associated with given interactions.
      operationId: getSOAPInteractionParameters
      parameters:
      - name: connectorId
        in: path
        description: Connector ID required to get the any child information like interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: ID of interaction for fetching headers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParameterModel'
        "400":
          description: The specified connector ID or domain ID or interaction ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      security:
      - basicAuth: []
  /metadata/connectors/{connectorId}/domains/{domainId}/interactions-soap/{interactionId}/body:
    get:
      tags:
      - metadata
      summary: get SOAP interaction request/response body.
      description: This API returns the request and response body from given interaction.
      operationId: getSOAPInteractionBody
      parameters:
      - name: connectorId
        in: path
        description: Connector ID required to get the any child information like interaction.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: domainId
        in: path
        description: Domain is the parent group for interactions.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: interactionId
        in: path
        description: ID of interaction for fetching requets/response body.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: Fetch either request or response body. By defualt returns both
          request and response body.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SOAPInteractionBody'
        "400":
          description: The specified connector ID or domain ID or interaction ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    ConnectionTypesResponse:
      type: object
      properties:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionTypeModel'
    ConnectionTypeModel:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        authenticationType:
          type: string
        testable:
          type: boolean
    ConnectionMetadataResponse:
      type: object
      properties:
        providerName:
          type: string
        connectorID:
          type: string
        connectionType:
          type: string
        authenticationScheme:
          type: string
        connectionGroupProperties:
          type: array
          items:
            type: object
            properties:
              fields:
                type: array
                items:
                  type: object
                  properties:
                    displayName:
                      type: string
                    defaultValue:
                      type: string
                    propertyValue:
                      type: string
                    schemaType:
                      type: string
                    propertyKey:
                      type: string
                    isEncrypted:
                      type: boolean
                    isHidden:
                      type: boolean
                    isRequired:
                      type: boolean
                    isArray:
                      type: boolean
                    modelType:
                      type: string
                    isContextProperty:
                      type: boolean
                    isOverride:
                      type: boolean
                    allowedValues:
                      type: array
                      items:
                        type: string
        connectionManagerProperties:
          type: object
          properties:
            groupType:
              type: string
            groupDisplayName:
              type: string
            fields:
              type: array
              items:
                type: object
                properties:
                  displayName:
                    type: string
                  defaultValue:
                    type: string
                  propertyValue:
                    type: string
                  schemaType:
                    type: string
                  propertyKey:
                    type: string
                  isEncrypted:
                    type: boolean
                  isHidden:
                    type: boolean
                  isRequired:
                    type: boolean
                  isArray:
                    type: boolean
                  modelType:
                    type: string
                  isContextProperty:
                    type: boolean
                  isOverride:
                    type: boolean
                  allowedValues:
                    type: array
                    items:
                      type: string
    ConnectorInfo:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        packageName:
          type: string
        description:
          type: string
        connectorGroupId:
          type: string
        type:
          type: string
        providerName:
          type: string
        versions:
          type: array
          items:
            type: object
            properties:
              connectorGroupVersion:
                type: string
              id:
                type: string
              description:
                type: string
              latest:
                type: boolean
    DomainsModel:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
    InteractionModel:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        method:
          type: string
        path:
          type: string
        mappings:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              description:
                type: string
              isRequired:
                type: string
              isFixed:
                type: string
              context:
                type: string
              source:
                type: object
                properties:
                  content:
                    type: string
                    format: nullable
                  type:
                    type: string
              target:
                type: object
                properties:
                  content:
                    type: string
                  type:
                    type: string
                  documentRef:
                    type: string
    RESTInteractionsResponse:
      type: object
      properties: {}
    SOAPInteractionModel:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        method:
          type: string
        path:
          type: string
        mappings:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              description:
                type: string
              isRequired:
                type: string
              isFixed:
                type: string
              context:
                type: string
              source:
                type: object
                properties:
                  content:
                    type: string
                    format: nullable
                  type:
                    type: string
              target:
                type: object
                properties:
                  content:
                    type: string
                  type:
                    type: string
                  documentRef:
                    type: string
    HeaderModel:
      type: object
      properties:
        nsName:
          type: string
        active:
          type: boolean
        mandatory:
          type: boolean
        defaultValue:
          type: string
        fixed:
          type: boolean
    ParameterModel:
      type: object
      properties:
        name:
          type: string
        dataType:
          type: string
        type:
          type: string
        defaultValue:
          type: string
          format: nullable
        description:
          type: string
        isRequired:
          type: boolean
        isActive:
          type: boolean
        isFixed:
          type: boolean
        isCustom:
          type: string
    RESTInteractionBody:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        mappings:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              description:
                type: string
              isRequired:
                type: string
              isFixed:
                type: string
              context:
                type: string
              source:
                type: object
                properties:
                  content:
                    type: string
                    format: nullable
                  type:
                    type: string
              target:
                type: object
                properties:
                  content:
                    type: string
                  type:
                    type: string
                  documentRef:
                    type: string
        request:
          type: object
          properties:
            name:
              type: string
            messageFormatterType:
              type: string
            builderType:
              type: string
            documentRef:
              type: string
            excludeRoot:
              type: string
        responses:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
              messageFormatterType:
                type: string
              builderType:
                type: string
              documentRef:
                type: string
              excludeRoot:
                type: string
        method:
          type: string
        path:
          type: string
        abstractDefinition:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              context:
                type: string
              type:
                type: array
                items:
                  type: string
              lookupType:
                type: string
              isFixed:
                type: string
    SOAPInteractionBody:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        mappings:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              description:
                type: string
              isRequired:
                type: string
              isFixed:
                type: string
              context:
                type: string
              source:
                type: object
                properties:
                  content:
                    type: string
                    format: nullable
                  type:
                    type: string
              target:
                type: object
                properties:
                  content:
                    type: string
                  type:
                    type: string
                  documentRef:
                    type: string
        request:
          type: object
          properties:
            name:
              type: string
            messageFormatterType:
              type: string
            builderType:
              type: string
            documentRef:
              type: string
            excludeRoot:
              type: string
        responses:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
              messageFormatterType:
                type: string
              builderType:
                type: string
              documentRef:
                type: string
              excludeRoot:
                type: string
        method:
          type: string
        path:
          type: string
        abstractDefinition:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              context:
                type: string
              type:
                type: array
                items:
                  type: string
              lookupType:
                type: string
              isFixed:
                type: string
    SOAPInteractionResponse:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        type:
          type: string
        mappings:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              displayName:
                type: string
              description:
                type: string
              isRequired:
                type: string
              isFixed:
                type: string
              context:
                type: string
              source:
                type: object
                properties:
                  content:
                    type: string
                    format: nullable
                  type:
                    type: string
              target:
                type: object
                properties:
                  content:
                    type: string
                  type:
                    type: string
                  documentRef:
                    type: string
        request:
          type: object
          properties:
            name:
              type: string
            messageFormatterType:
              type: string
            builderType:
              type: string
            documentRef:
              type: string
            excludeRoot:
              type: string
        responses:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              code:
                type: string
              messageFormatterType:
                type: string
              builderType:
                type: string
              documentRef:
                type: string
              excludeRoot:
                type: string
        method:
          type: string
        path:
          type: string
        abstractDefinition:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
              context:
                type: string
              type:
                type: array
                items:
                  type: string
              lookupType:
                type: string
              isFixed:
                type: string
    ErrorModel:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        resource:
          type: string
        details:
          type: object
          properties: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
